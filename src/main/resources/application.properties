###*********************************************************************
## pulsar_service_url : To connect pulsar server
## pulsar.subscription.type
    #Exclusive - Only the first consumer is allowed to the subscription
    #Failover -  Only the first consumer is active, upon fail dispatched to one of standby consumers
    #Shared - multiple consumers can attach to the same subscription and message are delivered in a
              # round robin distribution, no order guarantee
    #Key_Shared - v2.4.0 - Same as Shared, Only difference messages with the same key are delivered to only one consumer in order
## pulsar.read.message.timeout
## pulsar.read.message.time.unit - NANOSECONDS | MICROSECONDS | MILLISECONDS | SECONDS | MINUTES | HOURS | DAYS
###*********************************************************************

pulsar.service.url = pulsar://localhost:6650
pulsar.subscription.type = Key_Shared
pulsar.read.message.timeout = 800
pulsar.read.message.time.unit = MILLISECONDS;

###*********************************************************************
## mqtt_broker_url : To connect mqtt server
## mqtt.qos - quality of service
    #0 - at most once - suitable when you have a reliable connection between device and broker.
    #1 - at least once -a good choice if you need to be sure every message gets through, but your IoT application can tolerate receiving a message more than once.
    #2 - exactly once - guarantees delivery exactly once, but has a relatively high cost in terms of data transfer.
##*********************************************************************

mqtt.broker.url = tcp://localhost:1883
mqtt.qos = 2